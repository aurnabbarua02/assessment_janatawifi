{"ast":null,"code":"var _jsxFileName = \"D:\\\\assessment-janatawifi\\\\react_files\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport DataTable from \"react-data-table-component\";\nimport './App.css';\n\n// const App1 = () => {\n//   const tableHeader = [\"date\", \"trade_code\", \"high\", \"low\", \"open\", \"close\", \"volume\"];\n//   const [data, setData] = useState([]);\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://127.0.0.1:8000/stock/\")\n//       .then((res) => {\n//         setData(res.data);\n//       })\n//       .catch((err) => {\n//         console.error(err);\n//       });\n//   }, []);\n\n//   // Handle changes to the input fields\n//   const handleInputChange = (e, rowIndex, fieldName) => {\n//     const updatedData = [...data];\n//     updatedData[rowIndex] = { ...updatedData[rowIndex], [fieldName]: e.target.value };\n//     setData(updatedData);\n//   };\n\n//   // Handle the save operation for each row\n//   const handleSave = (id, updatedData) => {\n//     axios\n//       .put(`http://127.0.0.1:8000/stock/${id}/`, updatedData)\n//       .then(() => {\n//         alert(\"Data updated successfully!\");\n//       })\n//       .catch((err) => {\n//         alert(\"Error updating data: \" + err);\n//       });\n//   };\n\n//   const columns = tableHeader.map((field) => ({\n//     name: field.toUpperCase(),\n//     selector: (row) => row[field],\n//     sortable: true,\n//     cell: (row, rowIndex) => (\n//       <input\n//         type=\"text\"\n//         value={row[field]}\n//         onChange={(e) => handleInputChange(e, rowIndex, field)}\n//         style={{ width: \"90px\", fontSize:\"15px\" }}  \n//       />\n//     ),\n//   }));\n\n//   return (\n//     <div className=\"App\">\n//       <h2 className=\"App-header\">Stock Market Data</h2>\n//       <div className=\"container\">\n//         <DataTable\n//           columns={columns}\n//           data={data}\n//           pagination\n//           highlightOnHover\n//           dense\n//         />\n//       </div>\n\n//       {/* Render Save Button for each row */}\n//       <div className=\"mt-3\">\n//         {data.map((row, index) => (\n//           <div key={row.id} className=\"d-flex justify-content-between\">\n//             <button\n//               className=\"btn btn-success\"\n//               onClick={() => handleSave(row.id, row)} // Pass row's id and updated data\n//             >\n//               Save\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App2 = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/stock/\").then(res => {\n      setData(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  // Function to handle edit button click\n  const handleEdit = row => {\n    console.log(\"Editing row:\", row);\n    // Implement your edit functionality here\n  };\n\n  // Function to handle delete button click\n  const handleDelete = row => {\n    console.log(\"Deleting row:\", row);\n    // Implement your delete functionality here\n  };\n\n  // Define columns with action buttons\n  const columns = [{\n    name: \"Date\",\n    selector: \"date\",\n    sortable: true\n  }, {\n    name: \"Trade Code\",\n    selector: \"trade_code\",\n    sortable: true\n  }, {\n    name: \"High\",\n    selector: \"high\",\n    sortable: true\n  }, {\n    name: \"Low\",\n    selector: \"low\",\n    sortable: true\n  }, {\n    name: \"Open\",\n    selector: \"open\",\n    sortable: true\n  }, {\n    name: \"Close\",\n    selector: \"close\",\n    sortable: true\n  }, {\n    name: \"Volume\",\n    selector: \"volume\",\n    sortable: true\n  }, {\n    name: \"Actions\",\n    cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(row),\n        className: \"btn btn-primary btn-sm\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(row),\n        className: \"btn btn-danger btn-sm\",\n        style: {\n          marginLeft: \"5px\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this),\n    ignoreRowClick: true,\n    allowOverflow: true,\n    button: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Market Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data,\n      pagination: true,\n      highlightOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(App2, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App2;\nconst App = () => {\n  /*#__PURE__*/_jsxDEV(App1, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 3\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App2\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","DataTable","jsxDEV","_jsxDEV","App2","_s","data","setData","get","then","res","catch","err","console","error","handleEdit","row","log","handleDelete","columns","name","selector","sortable","cell","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","ignoreRowClick","allowOverflow","button","pagination","highlightOnHover","_c","App","App1","_c2","$RefreshReg$"],"sources":["D:/assessment-janatawifi/react_files/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport DataTable from \"react-data-table-component\";\nimport './App.css';\n\n\n\n// const App1 = () => {\n//   const tableHeader = [\"date\", \"trade_code\", \"high\", \"low\", \"open\", \"close\", \"volume\"];\n//   const [data, setData] = useState([]);\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://127.0.0.1:8000/stock/\")\n//       .then((res) => {\n//         setData(res.data);\n//       })\n//       .catch((err) => {\n//         console.error(err);\n//       });\n//   }, []);\n\n//   // Handle changes to the input fields\n//   const handleInputChange = (e, rowIndex, fieldName) => {\n//     const updatedData = [...data];\n//     updatedData[rowIndex] = { ...updatedData[rowIndex], [fieldName]: e.target.value };\n//     setData(updatedData);\n//   };\n\n//   // Handle the save operation for each row\n//   const handleSave = (id, updatedData) => {\n//     axios\n//       .put(`http://127.0.0.1:8000/stock/${id}/`, updatedData)\n//       .then(() => {\n//         alert(\"Data updated successfully!\");\n//       })\n//       .catch((err) => {\n//         alert(\"Error updating data: \" + err);\n//       });\n//   };\n\n//   const columns = tableHeader.map((field) => ({\n//     name: field.toUpperCase(),\n//     selector: (row) => row[field],\n//     sortable: true,\n//     cell: (row, rowIndex) => (\n//       <input\n//         type=\"text\"\n//         value={row[field]}\n//         onChange={(e) => handleInputChange(e, rowIndex, field)}\n//         style={{ width: \"90px\", fontSize:\"15px\" }}  \n//       />\n//     ),\n//   }));\n\n//   return (\n//     <div className=\"App\">\n//       <h2 className=\"App-header\">Stock Market Data</h2>\n//       <div className=\"container\">\n//         <DataTable\n//           columns={columns}\n//           data={data}\n//           pagination\n//           highlightOnHover\n//           dense\n//         />\n//       </div>\n\n//       {/* Render Save Button for each row */}\n//       <div className=\"mt-3\">\n//         {data.map((row, index) => (\n//           <div key={row.id} className=\"d-flex justify-content-between\">\n//             <button\n//               className=\"btn btn-success\"\n//               onClick={() => handleSave(row.id, row)} // Pass row's id and updated data\n//             >\n//               Save\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\nconst App2 = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:8000/stock/\")\n      .then((res) => {\n        setData(res.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  // Function to handle edit button click\n  const handleEdit = (row) => {\n    console.log(\"Editing row:\", row);\n    // Implement your edit functionality here\n  };\n\n  // Function to handle delete button click\n  const handleDelete = (row) => {\n    console.log(\"Deleting row:\", row);\n    // Implement your delete functionality here\n  };\n\n  // Define columns with action buttons\n  const columns = [\n    { name: \"Date\", selector: \"date\", sortable: true },\n    { name: \"Trade Code\", selector: \"trade_code\", sortable: true },\n    { name: \"High\", selector: \"high\", sortable: true },\n    { name: \"Low\", selector: \"low\", sortable: true },\n    { name: \"Open\", selector: \"open\", sortable: true },\n    { name: \"Close\", selector: \"close\", sortable: true },\n    { name: \"Volume\", selector: \"volume\", sortable: true },\n    {\n      name: \"Actions\",\n      cell: (row) => (\n        <div>\n          <button onClick={() => handleEdit(row)} className=\"btn btn-primary btn-sm\">\n            Edit\n          </button>\n          <button onClick={() => handleDelete(row)} className=\"btn btn-danger btn-sm\" style={{ marginLeft: \"5px\" }}>\n            Delete\n          </button>\n        </div>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <h2>Stock Market Data</h2>\n      <DataTable columns={columns} data={data} pagination highlightOnHover />\n    </div>\n  );\n}\nconst App = () => {\n  <App1/>\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}